Page object model framework
1. Every page should be a separate class
2. Each page should extend the reusable method
3. Every action should be a separate method inside a class
4. Every method should have a return type and return to the page it lands post completion of the method
5. Verify the page it has landed


Maven
src/main/java
	pages
		LoginPage.java extends GenericWrappers.java
			public LoginPage(AppiumDriver driver,ExtentTest test) {
			this.driver = driver;
			this.test = test;
			eleIsDisplayed(getWE(......));
			}
			public LoginPage enterUserName() {
			logStatus("User name entered successfully");
			return this;
			}
			public LoginPage enterPassword() {
			return this;
			}
			public LoginPage clickLoginBtnF() {
			return this;
			}
			public HomePage clickLoginBtn() {
			return new HomePage(driver,test);
			}
		HomePage.java extends GenericWrappers.java
			public HomePage(AppiumDriver driver,ExtentTest test) {
			this.driver = driver;
			this.test = test;
			eleIsDisplayed(getWE(......));
			}
	wrapper
		GenericWrappers.java extends Reporter.java
			public AppiumDriver driver;
		ProjectSpecificWrappers.java extends GenericWrappers.java
			@BeforeMethod
			public void bm() {
			createNode();
			launchApp(.......);
			}
			@AfterMethod
			public void bm() {
			closeApp();
			}
			@BeforeSuite
			public void bs() {
			intializeReports();
			}
			@BeforeClass
			public void bc() {
			createTC();
			}
			@AfterSuite
			public void sr() {
			saveReports();
			}

	utils
		Reporter.java
			public void intializeReports() {
			}
			public void createTC() {
			}
			public void createNode() {
			}
			public void logStatus() {
			}
			public void saveReports() {
			}
src/main/resources
src/test/java
	testcases
		TC001.java extends ProjectSpecificWrappers.java 
			@Test
			public void runCode() {
			new LoginPage(driver,test)
			.enterUserName()
			.enterPassword().clickLogin();
			}
src/test/resources













