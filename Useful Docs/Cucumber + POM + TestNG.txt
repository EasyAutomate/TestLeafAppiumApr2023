Page object model framework
1. Every page should be a separate class
2. Each page should extend the reusable method
3. Every action should be a separate method inside a class
4. Every method should have a return type and return to the page it lands post completion of the method
5. Verify the page it has landed


Maven
src/main/java
	pages
		LoginPage.java extends GenericWrappers.java
			public LoginPage() {
			eleIsDisplayed(getWE(......));
			}
			@Given("I enter the username")
			public LoginPage enterUserName() {
			logStatus("User name entered successfully");
			return this;
			}
			@Given("I enter the password")
			public LoginPage enterPassword() {
			return this;
			}
			public LoginPage clickLoginBtnF() {
			return this;
			}
			@Given("I click on the login button")
			public HomePage clickLoginBtn() {
			return new HomePage();
			}
		HomePage.java extends GenericWrappers.java
			public HomePage() {
			eleIsDisplayed(getWE(......));
			}
			@Given("Verify Home page is displayed")
			public HomePage verifyHomePage() {
			return this;
			}
	wrapper
		GenericWrappers.java extends AbstractTestNGCucumberTests.java
			public ThreadLocal<AppiumDriver> driver;
	
src/main/resources
src/test/java
	testRunner
		TestRunner.java extends GenericWrappers.java
		@CucumberOptions(features={"src/test/resources/features/Login page.feature",glue={"pages","wrapper"}
		public class TestRunner() {
			@BeforeMethod
			public void bm() {
			launchApp(.......);
			}
			@AfterMethod
			public void bm() {
			closeApp();
			}
		}
src/test/resources
	features
		Login page.feature
			Feature: Scenario name say login
			Scenario: Login success in app
			When I enter the username
			And I enter the password
			And I click on the login button
			Then Verify Home page is displayed












